image: python:3

workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_TARGET_BRANCH == "main"
    - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH == "main"
    - if: $CI_PIPELINE_SOURCE == "web" || $CI_PIPELINE_SOURCE == "trigger"

default:
  cache:
    paths:
      - .cache/pip
  before_script:
    - python -V
    - pip install --upgrade build twine

variables:
  GENERIC_PACKAGE_REGISTRY_URL: "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/pycoimset"
  PYPI_PACKAGE_REGISTRY_URL: "$CI_API_V4_URL/projects/$CI_PROJECT_ID/packages/pypi"
  PEP440_VERSION_PATTERN: "^([1-9][0-9]*!)?(0|[1-9][0-9]*)(\\.(0|[1-9][0-9]*))*((a|b|rc)(0|[1-9][0-9]*))?(\\.post(0|[1-9][0-9]*))?(\\.dev(0|[1-9][0-9]*))?$"
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

build:
  stage: build
  script:
    - python3 -m build
  artifacts:
    paths:
      - dist/*

test:
  stage: test
  needs:
    - job: build
      artifacts: true
  script:
    - twine check dist/*

push-binaries:
  stage: deploy
  needs:
    - job: build
      artifacts: true
  rules:
    - if: $CI_COMMIT_TAG && $CI_COMMIT_TAG =~ $PEP440_VERSION_PATTERN && ($CI_COMMIT_REF_PROTECTED || $FORCE_BINARY_UPLOAD)
  variables:
    TWINE_REPOSITORY_URL: "$PYPI_PACKAGE_REGISTRY_URL"
    TWINE_USERNAME: "gitlab-ci-token"
    TWINE_PASSWORD: "$CI_JOB_TOKEN"
    TWINE_NON_INTERACTIVE: "yes"
  script:
    - |
      for file in dist/*; do
        curl --header "JOB-TOKEN:$CI_JOB_TOKEN" \
          --upload-file "$file" \
          "$GENERIC_PACKAGE_REGISTRY_URL/$CI_COMMIT_TAG/$(basename $file)"
      done
    - twine upload dist/*

create-release:
  stage: deploy
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  rules:
    - if: $CI_COMMIT_TAG && $CI_COMMIT_TAG =~ $PEP440_VERSION_PATTERN && ($CI_COMMIT_REF_PROTECTED || $FORCE_RELEASE_CREATION)
  needs:
    - job: build
      artifacts: true
  script:
    - echo "Creating release $CI_COMMIT_TAG"
    - |
      release-cli create --name "Version $CI_COMMIT_TAG" \
        --tag-name "$CI_COMMIT_TAG" \
       $(for file in dist/*; do echo "--assets-link '{\"name\": \"$(basename $file)\", \"url\": \"$GENERIC_PACKAGE_REGISTRY_URL/$CI_COMMIT_TAG/$(basename $file)\", \"link_type\": \"package\"}'"; done)
